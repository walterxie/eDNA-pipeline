nrow(communityMatrix)
DiversityTable <- function(community_matrix){#
	diversity_table <- data.frame(row.names=c("gamma", "alpha", "beta"))#
#
	diversity_table$'q=0' <- c(#
	  d(community_matrix,lev="gamma",q=0),#
	  d(community_matrix,lev="alpha",q=0),#
	  d(community_matrix,lev="beta",q=0))#
#
	diversity_table$'q=1' <- c(#
	  d(community_matrix,lev="gamma",q=1),#
	  d(community_matrix,lev="alpha",q=1),#
	  d(community_matrix,lev="beta",q=1))#
#
	diversity_table$'q=2' <- c(#
	  d(community_matrix,lev="gamma",q=2),#
	  d(community_matrix,lev="alpha",q=2),#
	  d(community_matrix,lev="beta", q=2))#
	return(diversity_table)#
}
withSites = 5#
lev="gamma"#
q=0#
#
tmpCM <- communityMatrix
while(nrow(tmpCM) >= withSites){ #
	maxRemainedDiv = 0#
	removedSiteId = 0#
#
	for (siteId in 1:length(tmpCM)) {#
		diversity_table <- DiversityTable(tmpCM[-siteId,])#
		tmpDiv <- diversity_table[lev,q+1]#
		if (tmpDiv > maxRemainedDiv) {#
			maxRemainedDiv = tmpDiv#
			removedSiteId = siteId#
		}#
	}#
#
    if(maxRemainedDiv < 1 | removedSiteId < 1) stop(paste("incorrect max remained ", lev, "(", q, ") = ", maxRemainedDiv, ", when sites = ", nrow(tmpCM), sep=""))#
    print(paste("remove site ", colnames(tmpCM)[removedSiteId], ", max remained ", lev, "(", q, ") = ", maxRemainedDiv, sep=""))  #
    tmpCM <- tmpCM[-removedSiteId,]       #
}
nrow(tmpCM)
nrow(tmpCM[-1,])
nrow(tmpCM[-2,])
nrow(tmpCM[-60,])
JostDiversity <- function(community_matrix, level, qN){#
	return(d(community_matrix,lev=level,q=qN))#
}
library(gplots)#
library(ggplot2)#
library(grid)#
library(RColorBrewer)#
#
workingPath <- "~/Projects/NZGO/LBI/"#
sourcePath <- "~/svn/compevol/research/ModelEcosystem/pipeline/Modules/"#
experiments <-  c("16S", "18S", "26S", "ShCO1") #"ITS", "FolCO1-no-plot2", only for cm file name and folder name#
matrixNames <-  c("16S", "18S", "26S", "COI-short") #"ITS", "COI-fol", #
#
source(paste(sourcePath, "init.R", sep=""), local=TRUE)#
#
n <- length(matrixNames) #
# number of colours and shapes >= experiments#
mypalette <- c("red", "orange", "green", "purple", "blue", "brown")#
myshape <- seq(15, (15 + n -1))#
#
levels = rep(c("gamma","alpha","beta"),3)#
qs = rep(0:2,each=3)#
otuThr = 97
expId=1
matrixName <- matrixNames[expId]#
	experiment <- experiments[expId]#
	# e.g. otus97/16S_97_cm.csv#
	inputCM <- paste(workingPath, "data/", experiment, ".txt", sep="")#
	#print(paste("expId = ", expId, ", matrixName = ", matrixName, ", experiment = ", experiment, ", inputCM = ", inputCM, sep=""))  #
	matrixName <- paste(matrixName, "-by-subplot", sep = "")#
#
	source(paste(sourcePath, "InputBySubplot.R", sep=""), local=TRUE)#
	source(paste(sourcePath, "CommunityTransposeFilter.R", sep=""), local=TRUE)
JostDiversity <- function(community_matrix, level, qN){#
	return(d(community_matrix,lev=level,q=qN))#
}#
withSites = 5#
lev="gamma"#
q=0#
#
tmpCM <- communityMatrix#
removedSites <- c()#
#
jostDiversity <- JostDiversity(communityMatrix, lev, q)#
# add orignal diversity#
maxRemainedDiversities <- c(jostDiversity)
library(vegetarian)
JostDiversity <- function(community_matrix, level, qN){#
	return(d(community_matrix,lev=level,q=qN))#
}#
withSites = 5#
lev="gamma"#
q=0#
#
tmpCM <- communityMatrix#
removedSites <- c()#
#
jostDiversity <- JostDiversity(communityMatrix, lev, q)#
# add orignal diversity#
maxRemainedDiversities <- c(jostDiversity)
while(nrow(tmpCM) >= withSites){ #
	maxRemainedDiv = 0#
	removedSiteId = 0#
#
	for (siteId in 1:nrow(tmpCM)) {#
		tmpDiv <- JostDiversity(tmpCM[-siteId,], lev, q)#
		if (tmpDiv > maxRemainedDiv) {#
			maxRemainedDiv = tmpDiv#
			removedSiteId = siteId#
		}#
		print(paste("remove siteId = ", siteId, ", maxRemainedDiv = ", maxRemainedDiv, sep="")) #
	}#
#
    if(maxRemainedDiv < 1 | removedSiteId < 1) stop(paste("incorrect max remained ", lev, "(", q, ") = ", maxRemainedDiv, ", when sites = ", nrow(tmpCM), sep=""))#
    print(paste("remove site ", rownames(tmpCM)[removedSiteId], ", max remained ", lev, "(", q, ") = ", maxRemainedDiv, sep=""))  #
    removedSites <- c(removedSites, rownames(tmpCM)[removedSiteId])#
    maxRemainedDiversities <- c(maxRemainedDiversities, maxRemainedDiv)#
    tmpCM <- tmpCM[-removedSiteId,]       #
}#
#
maxDiv <- NULL#
maxDiv$sites <- seq(nrow(communityMatrix), withSites, by=-1)#
#
if(length(maxDiv$sites) != length(maxRemainedDiversities)) #
	stop(paste("length of maxRemainedDiversities ", maxRemainedDiversities, " !=  sites ", length(maxDiv$sites), sep=""))#
#
maxDiv$diversity <- maxRemainedDiversities
maxDiv$sites <- seq(nrow(communityMatrix), 4, by=-1)
maxDiv$sites
maxDiv
outputMaxDiv <- paste("~/Projects/NZGO/LBI/data/max-remained-", lev, q, "-", matrixName, "-table.csv", sep = "")#
write.csv(maxDiv, outputMaxDiv, row.names=FALSE)
lev="gamma"#
q=0#
maxX <- 0#
maxY <- 0#
#
for (expId in 1:length(matrixNames)) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixName, "-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE), check.names=FALSE)#
	maxX <- max(maxX, max(as.numeric(maxDivTable$sites)))#
	maxY <- max(maxY, max(as.numeric(maxDivTable$diversity)))#
}#
#
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
for (expId in 1:length(matrixNames)) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixName, "-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE), check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,0), ylim=c(0,maxY), #
			   xlab="number of sites remained", ylab=paste(lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity, lty=2, col=mypalette[expId]) #
}    #
#
invisible(dev.off())
maxX <- 0#
maxY <- 0#
#
for (expId in 1:length(matrixNames)) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixName, "-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
	maxX <- max(maxX, max(as.numeric(maxDivTable$sites)))#
	maxY <- max(maxY, max(as.numeric(maxDivTable$diversity)))#
}#
#
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
for (expId in 1:length(matrixNames)) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixName, "-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,0), ylim=c(0,maxY), #
			   xlab="number of sites remained", ylab=paste(lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity, lty=2, col=mypalette[expId]) #
}    #
#
invisible(dev.off())
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,0), ylim=c(0,maxY), #
			   xlab="number of sites remained", ylab=paste(lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity, lty=2, col=mypalette[expId]) #
}    #
#
par(usr=c(0,1,0,1),xpd=NA)#
legend(-1.2, -0.3, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))
n
matrixNames
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,0), ylim=c(0,maxY), #
			   xlab="number of sites remained", ylab=paste(lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity, lty=2, col=mypalette[expId]) #
}
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-subplot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,0), ylim=c(0,maxY), #
			   xlab="number of sites remained", ylab=paste(lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity, lty=2, col=mypalette[expId]) #
}
lev="gamma"#
q=0#
maxX <- 0#
maxY <- 0#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-subplot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
	maxX <- max(maxX, max(as.numeric(maxDivTable$sites)))#
	maxY <- max(maxY, max(as.numeric(maxDivTable$diversity)))#
}
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-subplot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,0), ylim=c(0,maxY), #
			   xlab="number of sites remained", ylab=paste(lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity, lty=2, col=mypalette[expId]) #
}
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-subplot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,0), ylim=c(0,maxY), #
			   xlab="number of sites remained", ylab=paste(lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity, lty=2, col=mypalette[expId]) #
}    #
#
par(usr=c(0,1,0,1),xpd=NA)#
legend(-1.2, -0.3, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))
legend(0, 0, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-subplot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,0), ylim=c(0,maxY), #
			   xlab="number of sites remained", ylab=paste(lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity, lty=2, col=mypalette[expId]) #
}    #
#
par(usr=c(0,1,0,1),xpd=NA)#
legend(-1.2, -0.3, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))
par(usr=c(0,10,0,1),xpd=NA)
par(usr=c(0,10,0,10),xpd=NA)
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-subplot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,0), ylim=c(0,maxY), #
			   xlab="number of sites remained", ylab=paste(lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity, pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity, lty=2, col=mypalette[expId]) #
}    #
#
par(usr=c(0,10,0,1),xpd=NA)
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-subplot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,0), ylim=c(0,maxY), #
			   xlab="number of sites remained", ylab=paste(lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-subplot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,0), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste(lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}
removedSites
library(gplots)#
library(ggplot2)#
library(grid)#
library(RColorBrewer)#
#
workingPath <- "~/Projects/NZGO/LBI/"#
sourcePath <- "~/svn/compevol/research/ModelEcosystem/pipeline/Modules/"#
experiments <-  c("16S", "18S", "26S", "ShCO1") #"ITS", "FolCO1-no-plot2", only for cm file name and folder name#
matrixNames <-  c("16S", "18S", "26S", "COI-short") #"ITS", "COI-fol", #
#
n <- length(matrixNames) #
# number of colours and shapes >= experiments#
mypalette <- c("red", "orange", "green", "purple", "blue", "brown")#
myshape <- seq(15, (15 + n -1))#
#
levels = rep(c("gamma","alpha","beta"),3)#
qs = rep(0:2,each=3)#
otuThr = 97
maxX <- 0#
maxY <- 0#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
	maxX <- max(maxX, max(as.numeric(maxDivTable$sites)))#
	maxY <- max(maxY, max(as.numeric(maxDivTable$diversity)))#
}
lev="gamma"#
q=0#
maxX <- 0#
maxY <- 0#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
	maxX <- max(maxX, max(as.numeric(maxDivTable$sites)))#
	maxY <- max(maxY, max(as.numeric(maxDivTable$diversity)))#
}
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,0), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
par(usr=c(0,10,0,1),xpd=NA)#
legend(-1.2, -0.3, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
par(usr=c(0,1,0,10),xpd=NA)#
legend(-1.2, -0.3, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
par(mar=c(4,4,2,1))	#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend(-1.2, -0.3, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
par(mar=c(4,10,2,1))	#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend(-1.2, -0.3, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
par(mar=c(10,4,2,1))	#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend(-1.2, -0.3, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
par(mar=c(10,4,2,1))	#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend(0, 0, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
par(mar=c(10,4,2,1))	#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend(4, 1, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
par(mar=c(4,4,5,1))	#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend(6, 2, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
par(mar=c(4,4,5,1))	#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend(4, 2, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
par(mar=c(4,4,5,1))	#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend(4, 1, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
par(mar=c(4,4,5,1))	#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend(1, 1, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
par(mar=c(4,4,5,1))	#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend(6, 1.2, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
par(mar=c(4,4,5,1))	#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend(4.5, 1.2, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
par(mar=c(4,4,5,1))	#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend(ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
par(mar=c(4,4,5,1))	#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend(4, 1.1, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
par(mar=c(4,4,5,1))	#
legend(4, 1, ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
invisible(dev.off())
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend("bottomleft", ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$sites, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend("bottomleft", ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
library(gplots)#
library(ggplot2)#
library(grid)#
library(RColorBrewer)#
#
workingPath <- "~/Projects/NZGO/LBI/"#
sourcePath <- "~/svn/compevol/research/ModelEcosystem/pipeline/Modules/"#
experiments <-  c("16S", "18S", "26S", "ShCO1") #"ITS", "FolCO1-no-plot2", only for cm file name and folder name#
matrixNames <-  c("16S", "18S", "26S", "COI-short") #"ITS", "COI-fol", #
#
n <- length(matrixNames) #
# number of colours and shapes >= experiments#
mypalette <- c("red", "orange", "green", "purple", "blue", "brown")#
myshape <- seq(15, (15 + n -1))#
#
replicate = 1#
threshold = 150#
levels = rep(c("gamma","alpha","beta"),3)#
qs = rep(0:2,each=3)#
otuThr = 97#
#
lev="gamma"#
q=1
q=0
expId=1
inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)
maxDivTable
1:nrow(matrixNames)
seq(1:nrow(matrixNames))
seq(1,nrow(matrixNames))
1:20
seq(1:20)
20:2
maxDivTable[order(maxDivTable[,3]),]
df = data.frame(matrix(vector(), 0, 3, dimnames=list(c(), c("Date", "File", "User"))), stringsAsFactors=F)
df
colnames(df)
df = data.frame(col.names = c("Date", "File", "User"))
df
colnames(df)
maxDivTable[order(maxDivTable$removedSites),]
maxDivTable[order(maxDivTable$removedSites),c(3,1)]
maxX <- 0#
maxY <- 0#
allMaxDiv <- NULL#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
	maxX <- max(maxX, max(as.numeric(maxDivTable$sites)))#
	maxY <- max(maxY, max(as.numeric(maxDivTable$diversity)))#
	if (expId==1) {#
		allMaxDiv <- maxDivTable[order(maxDivTable$removedSites),c(3,1)]#
	}#
	colnames(allMaxDiv)[expId+1] <- matrixNames[expId]#
}
allMaxDiv
colnames(allMaxDiv)[expId+1]
expId
maxDivTable
inputMaxDiv
maxX <- 0#
maxY <- 0#
allMaxDiv <- NULL#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
	maxX <- max(maxX, max(as.numeric(maxDivTable$sites)))#
	maxY <- max(maxY, max(as.numeric(maxDivTable$diversity)))#
	if (expId==1) {#
		allMaxDiv <- maxDivTable[order(maxDivTable$removedSites),3]#
	} #
	allMaxDiv$tmp <- maxDivTable[order(maxDivTable$removedSites),1]#
	colnames(allMaxDiv)[expId+1] <- matrixNames[expId]#
}
allMaxDiv
maxX <- 0#
maxY <- 0#
allMaxDiv <- NULL
expId=1
inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
	maxX <- max(maxX, max(as.numeric(maxDivTable$sites)))#
	maxY <- max(maxY, max(as.numeric(maxDivTable$diversity)))
maxX <- max(maxX, max(as.numeric(maxDivTable$rank)))#
	maxY <- max(maxY, max(as.numeric(maxDivTable$diversity)))
allMaxDiv <- maxDivTable[order(maxDivTable$removedSites),3]
allMaxDiv
allMaxDiv$Plots <- maxDivTable[order(maxDivTable$removedSites),3]
order(maxDivTable$removedSites)
maxDivTable$removedSites
maxDivTable[order(maxDivTable$removedSites),][,3]
allMaxDiv$Plots <- maxDivTable[order(maxDivTable$removedSites),][,3]
allMaxDiv
allMaxDiv <- NULL
allMaxDiv$Plots <- maxDivTable[order(maxDivTable$removedSites),][,3]
allMaxDiv
allMaxDiv$tmp <- maxDivTable[order(maxDivTable$removedSites),][,1]
allMaxDiv
colnames(allMaxDiv)[expId+1] <- matrixNames[expId]
colnames(allMaxDiv)[expId+1]
colnames(allMaxDiv)
allMaxDiv <- NULL
allMaxDiv$Plots <- maxDivTable[order(maxDivTable$removedSites),][,3]
allMaxDiv$tmp <- maxDivTable[order(maxDivTable$removedSites),][,1]
colnames(allMaxDiv)
allMaxDiv
colnames(allMaxDiv)[1] <- "Plots"
colnames(allMaxDiv) <- c("Plots")
col.names <- c("Plots")
colnames(allMaxDiv)
maxX <- 0#
maxY <- 0#
allMaxDiv <- NULL#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
	maxX <- max(maxX, max(as.numeric(maxDivTable$rank)))#
	maxY <- max(maxY, max(as.numeric(maxDivTable$diversity)))#
	if (expId==1) {#
		allMaxDiv$Plots <- maxDivTable[order(maxDivTable$removedSites),][,3]#
		#colnames(allMaxDiv) <- c("Plots")#
	} #
	allMaxDiv$tmp <- maxDivTable[order(maxDivTable$removedSites),][,1]#
	#colnames(allMaxDiv)[expId+1] <- matrixNames[expId]#
}
allMaxDiv
allMaxDiv$Plots != maxDivTable[order(maxDivTable$removedSites),][,1]
allMaxDiv$Plots
maxDivTable[order(maxDivTable$removedSites),][,1]
allMaxDiv$Plots != maxDivTable[order(maxDivTable$removedSites),][,3]
if(allMaxDiv$Plots != maxDivTable[order(maxDivTable$removedSites),][,3]) #
           stop(paste("Find different plots ", allMaxDiv$Plots, " != ", maxDivTable[order(maxDivTable$removedSites),][,1], sep=""))
all(allMaxDiv$Plots != maxDivTable[order(maxDivTable$removedSites),][,3])
maxX <- 0#
maxY <- 0#
allMaxDiv <- NULL#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
	maxX <- max(maxX, max(as.numeric(maxDivTable$rank)))#
	maxY <- max(maxY, max(as.numeric(maxDivTable$diversity)))#
	if (expId==1) {#
		allMaxDiv$Plots <- maxDivTable[order(maxDivTable$removedSites),][,3]#
		#colnames(allMaxDiv) <- c("Plots")#
	} else {#
	   if(all(allMaxDiv$Plots != maxDivTable[order(maxDivTable$removedSites),][,3])) #
           stop(paste("Find different plots ", allMaxDiv$Plots, " != ", maxDivTable[order(maxDivTable$removedSites),][,1], sep=""))#
	}#
	allMaxDiv[,expId+1] <- maxDivTable[order(maxDivTable$removedSites),][,1]#
	#colnames(allMaxDiv)[expId+1] <- matrixNames[expId]#
}
allMaxDiv
allMaxDiv[,2] <- maxDivTable[order(maxDivTable$removedSites),][,1]
allMaxDiv[,matrixNames[expId]] <- maxDivTable[order(maxDivTable$removedSites),][,1]
matrixNames[expId]
maxDivTable[order(maxDivTable$removedSites),][,1]
allMaxDiv[,1]
allMaxDiv <- NULL
allMaxDiv[,1] <- maxDivTable[order(maxDivTable$removedSites),][,3]
allMaxDiv <- data.frame(Plots= maxDivTable[order(maxDivTable$removedSites),][,3], stringsAsFactors = FALSE)
allMaxDiv <- NULL
allMaxDiv <- data.frame(Plots= maxDivTable[order(maxDivTable$removedSites),][,3], stringsAsFactors = FALSE)
allMaxDiv
allMaxDiv[,matrixNames[expId]] <- maxDivTable[order(maxDivTable$removedSites),][,1]
allMaxDiv
maxX <- 0#
maxY <- 0#
allMaxDiv <- NULL#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
	maxX <- max(maxX, max(as.numeric(maxDivTable$rank)))#
	maxY <- max(maxY, max(as.numeric(maxDivTable$diversity)))#
	if (expId==1) {		#
		allMaxDiv <- data.frame(Plots= maxDivTable[order(maxDivTable$removedSites),][,3], stringsAsFactors = FALSE)		#
	} else {#
	   if(all(allMaxDiv$Plots != maxDivTable[order(maxDivTable$removedSites),][,3])) #
           stop(paste("Find different plots ", allMaxDiv$Plots, " != ", maxDivTable[order(maxDivTable$removedSites),][,1], sep=""))#
	}#
	allMaxDiv[,matrixNames[expId]] <- maxDivTable[order(maxDivTable$removedSites),][,1]#
}
allMaxDiv
outputMaxDiv <- paste(workingPath, "data/plots-rank-table-", lev, q, ".csv", sep = "")#
write.csv(maxDiv, outputMaxDiv, row.names=FALSE)
write.csv(allMaxDiv, outputMaxDiv, row.names=FALSE)
q
q=1
maxX <- 0#
maxY <- 0#
allMaxDiv <- NULL#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
	maxX <- max(maxX, max(as.numeric(maxDivTable$rank)))#
	maxY <- max(maxY, max(as.numeric(maxDivTable$diversity)))#
	if (expId==1) {		#
		allMaxDiv <- data.frame(Plots= maxDivTable[order(maxDivTable$removedSites),][,3], stringsAsFactors = FALSE)		#
	} else {#
	   if(all(allMaxDiv$Plots != maxDivTable[order(maxDivTable$removedSites),][,3])) #
           stop(paste("Find different plots ", allMaxDiv$Plots, " != ", maxDivTable[order(maxDivTable$removedSites),][,1], sep=""))#
	}#
	allMaxDiv[,matrixNames[expId]] <- maxDivTable[order(maxDivTable$removedSites),][,1]#
}#
outputMaxDiv <- paste(workingPath, "data/plots-rank-table-", lev, q, ".csv", sep = "")#
write.csv(allMaxDiv, outputMaxDiv, row.names=FALSE)
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$rank, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(maxX,1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$rank, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$rank, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend("bottomleft", ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$rank, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(nrow(maxDivTable),1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$rank, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$rank, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend("bottomleft", ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
q
maxDivTable
q-0
q=0
allMaxDiv <- NULL#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
	if (expId==1) {		#
		allMaxDiv <- data.frame(Plots= maxDivTable[order(maxDivTable$removedSites),][,3], stringsAsFactors = FALSE)		#
	} else {#
	   if(all(allMaxDiv$Plots != maxDivTable[order(maxDivTable$removedSites),][,3])) #
           stop(paste("Find different plots ", allMaxDiv$Plots, " != ", maxDivTable[order(maxDivTable$removedSites),][,1], sep=""))#
	}#
	allMaxDiv[,matrixNames[expId]] <- maxDivTable[order(maxDivTable$removedSites),][,1]#
}#
outputMaxDiv <- paste(workingPath, "data/plots-rank-table-", lev, q, ".csv", sep = "")#
write.csv(allMaxDiv, outputMaxDiv, row.names=FALSE)#
pdf(paste(workingPath, "figures/max-remained-", lev, q, ".pdf", sep = ""), width=8, height=8)#
#
for (expId in 1:n) {#
	inputMaxDiv <- paste(workingPath, "data/max-remained-", lev, q, "-", matrixNames[expId], "-by-plot-table.csv", sep = "")#
#
	maxDivTable <- read.csv(file=inputMaxDiv, head=TRUE, check.names=FALSE)#
#
	if (expId == 1) {#
		plot(maxDivTable$rank, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId], xlim=c(nrow(maxDivTable),1), ylim=c(0,1), #
			   xlab="number of sites remained", ylab=paste("% of original ", lev, "(", q, ")", sep=""), main="") 				  #
	} else {#
		points(maxDivTable$rank, maxDivTable$diversity/max(maxDivTable$diversity), pch=myshape[expId], col=mypalette[expId]) #
	}#
#
	lines(maxDivTable$rank, maxDivTable$diversity/max(maxDivTable$diversity), lty=2, col=mypalette[expId]) #
}    #
#
legend("bottomleft", ncol=n, legend=matrixNames, col=mypalette, pch=as.numeric(myshape))#
#
invisible(dev.off())
library(gplots)#
library(ggplot2)#
library(grid)#
library(RColorBrewer)#
#
workingPath <- "~/Projects/NZGO/LBI/"#
sourcePath <- "~/svn/compevol/research/ModelEcosystem/pipeline/Modules/"#
experiments <-  c("16S", "18S", "26S", "ShCO1") #"ITS", "FolCO1-no-plot2", only for cm file name and folder name#
matrixNames <-  c("16S", "18S", "26S", "COI-short") #"ITS", "COI-fol", #
#
n <- length(matrixNames) #
# number of colours and shapes >= experiments#
mypalette <- c("red", "orange", "green", "purple", "blue", "brown")#
myshape <- seq(15, (15 + n -1))#
#
replicate = 1#
threshold = 150#
levels = rep(c("gamma","alpha","beta"),3)#
qs = rep(0:2,each=3)#
otuThr = 97
expId=1
matrixName <- matrixNames[expId]#
	experiment <- experiments[expId]#
	# e.g. otus97/16S_97_cm.csv#
	inputCM <- paste(workingPath, "data/", experiment, ".txt", sep="")
source(paste(sourcePath, "InputBySubplot.R", sep=""), local=TRUE)#
	source(paste(sourcePath, "CommunityTransposeFilter.R", sep=""), local=TRUE)
library(vegan)#
library(ggplot2)
df.dist <- vegdist(communityMatrix, method="bray", binary=TRUE)
mds <- metaMDS(df.dist)#
pts_mds <- as.data.frame(mds$points)#
stress_mds <- mds$stress
rownames(pts_mds)
pts_mds
stress_mds
sapply(strsplit(rownames(pts_mds), "\\."), "[", 2)
sapply(strsplit(rownames(pts_mds), "-"), "[", 2)
sapply(strsplit(rownames(pts_mds), "-"), "[", 1)
pts_mds$reps <- sapply(strsplit(rownames(pts_mds), "\\."), "[", 2)
plot <- ggplot(pts_mds, aes(x = MDS1, y = MDS2, color = reps)) + #
                geom_point(size = 5) + #
                geom_text(aes(label = pts_mds$reps), size = 3, vjust = 2) +#
                geom_polygon(aes(group = pts_mds$reps), fill = NA) +#
                ggtitle(paste(label, ", Jaccard (stress:", round(stress_mds, 2),")"))
ggplot(pts_mds, aes(x = MDS1, y = MDS2, color = reps)) + #
                geom_point(size = 5) + #
                geom_text(aes(label = pts_mds$reps), size = 3, vjust = 2) +#
                geom_polygon(aes(group = pts_mds$reps), fill = NA)
pts_mds
pts_mds$reps <- sapply(strsplit(rownames(pts_mds), "-"), "[", 2)
ggplot(pts_mds, aes(x = MDS1, y = MDS2, color = reps)) + #
                geom_point(size = 5) + #
                geom_text(aes(label = pts_mds$reps), size = 3, vjust = 2) +#
                geom_polygon(aes(group = pts_mds$reps), fill = NA)
pts_mds
pts_mds$reps <- sapply(strsplit(rownames(pts_mds), "-"), "[", 1)
ggplot(pts_mds, aes(x = MDS1, y = MDS2, color = reps)) + #
                geom_point(size = 5) + #
                geom_text(aes(label = pts_mds$reps), size = 3, vjust = 2) +#
                geom_polygon(aes(group = pts_mds$reps), fill = NA)
ggplot(pts_mds, aes(x = MDS1, y = MDS2, color = reps)) + #
                geom_point(size = 5) + #
                geom_text(aes(label = rownames(pts_mds)), size = 3, vjust = 2) +#
                geom_polygon(aes(group = pts_mds$reps), fill = NA)
matrixName
pts_mds$plots <- sapply(strsplit(rownames(pts_mds), "-"), "[", 1)#
pdf(paste(workingPath, "figures/mds-subplots-", lev, q, "-", matrixName, ".pdf", sep = ""), width=9, height=9)#
#
# Plot MDS ordination#
print( ggplot(pts_mds, aes(x = MDS1, y = MDS2, color = plots)) + #
                geom_point(size = 5) + #
                geom_text(aes(label = rownames(pts_mds)), size = 3, vjust = 2) +#
                geom_polygon(aes(group = pts_mds$plots), fill = NA) )#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/mds-subplots-", lev, q, "-", matrixName, ".pdf", sep = ""), width=8, height=6)#
#
# Plot MDS ordination#
print( ggplot(pts_mds, aes(x = MDS1, y = MDS2, color = plots)) + #
                geom_point(size = 5) + #
                geom_text(aes(label = rownames(pts_mds)), size = 3, vjust = 2) +#
                geom_polygon(aes(group = pts_mds$plots), fill = NA) )#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/mds-subplots-", lev, q, "-", matrixName, ".pdf", sep = ""), width=8, height=7)#
#
# Plot MDS ordination#
print( ggplot(pts_mds, aes(x = MDS1, y = MDS2, color = plots)) + #
                geom_point(size = 5) + #
                geom_text(aes(label = rownames(pts_mds)), size = 3, vjust = 2) +#
                geom_polygon(aes(group = pts_mds$plots), fill = NA) )#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/mds-subplots-", lev, q, "-", matrixName, ".pdf", sep = ""), width=10, height=8)#
#
# Plot MDS ordination#
print( ggplot(pts_mds, aes(x = MDS1, y = MDS2, color = plots)) + #
                geom_point(size = 5) + #
                geom_text(aes(label = rownames(pts_mds)), size = 3, vjust = 2) +#
                geom_polygon(aes(group = pts_mds$plots), fill = NA) )#
#
invisible(dev.off())
stress_mds
pdf(paste(workingPath, "figures/mds-subplots-", lev, q, "-", matrixName, ".pdf", sep = ""), width=10, height=8)#
#
# Plot MDS ordination#
print( ggplot(pts_mds, aes(x = MDS1, y = MDS2, color = plots)) + #
			geom_point(size = 5) + #
			geom_text(aes(label = rownames(pts_mds)), size = 3, vjust = 2) +#
			geom_polygon(aes(group = pts_mds$plots), fill = NA) +#
			ggtitle(paste("MDS for", matrixName, "using", dissimilarityIndex, "(stress:", round(stress_mds, 2),")") )#
#
invisible(dev.off())
dissimilarityIndex="bray"
pdf(paste(workingPath, "figures/mds-subplots-", lev, q, "-", matrixName, ".pdf", sep = ""), width=10, height=8)#
#
# Plot MDS ordination#
print( ggplot(pts_mds, aes(x = MDS1, y = MDS2, color = plots)) + #
			geom_point(size = 5) + #
			geom_text(aes(label = rownames(pts_mds)), size = 3, vjust = 2) +#
			geom_polygon(aes(group = pts_mds$plots), fill = NA) +#
			ggtitle(paste("MDS for", matrixName, "using", dissimilarityIndex, "(stress:", round(stress_mds, 2),")") )#
#
invisible(dev.off())
pdf(paste(workingPath, "figures/mds-subplots-", lev, q, "-", matrixName, ".pdf", sep = ""), width=10, height=8)#
#
# Plot MDS ordination#
print( ggplot(pts_mds, aes(x = MDS1, y = MDS2, color = plots)) + #
			geom_point(size = 5) + #
			geom_text(aes(label = rownames(pts_mds)), size = 3, vjust = 2) +#
			geom_polygon(aes(group = pts_mds$plots), fill = NA) +#
			ggtitle(paste("MDS for", matrixName, "using", dissimilarityIndex, "(stress:", round(stress_mds, 2),")")) )#
#
invisible(dev.off())
mds
sample_count
adonis_formula <- d.hornMorisita
d.hornMorisita <- dist(1)
d.hornMorisita
adonis_formula <- d.hornMorisita
adonis_formula
adonis_formula <- eval(d.hornMorisita)
adonis_formula
adonis_formula <- deparse(substitute(d.hornMorisita))
adonis_formula
substr("abcdef", 2, 4)
substring("abcdef", 1:6, 1:6)
distMethod = "d.brayBin"
length(distMethod)
nchar(distMethod)
substr(distMethod, 3, nchar(distMethod))
df <- data.frame(var1=c('a', 'b', 'c'), var2=c('d', 'e', 'f'), freq=1:3)
df
df.expanded <- df[rep(row.names(df), df$freq), 1:2]
df.expanded
df.expanded <- df[rep(df), 1:2]
rep(df)
df[rep(seq_len(dim(df)[1]), df$freq), 2]
df
dim(df)
dim(df)[1]
?dim
source('~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/createAllDiversitiesOTUsTable.r', chdir = TRUE)
source('~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/allSampleCount.r', chdir = TRUE)
source('~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/allWithinBetweenPlots.r', chdir = TRUE)
source('~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/allRarefractions.r', chdir = TRUE)
source('~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/allMaxRemainedDiversity.r', chdir = TRUE)
source('~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/allRarefractions.r', chdir = TRUE)
source('~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/allDiversitiesOTUs.r', chdir = TRUE)
sourcePath <- "~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/Modules/"#
setwd(sourcePath)#
#
workingPath <- "~/Projects/NZGO/pilot2010/pipeline/"#
experiments <-  c("16S", "18S", "trnL", "ITS", "COI", "COI-spun") # only for cm file name and folder name#
matrixNames <-  experiments#
#
matrixNamesNo454 <-  c("seedlings","trees","invertebrates","birds") # need expId correct for "birds","seedlings" #
#
n <- length(matrixNames) #
m <- length(matrixNamesNo454)#
#
levels = rep(c("gamma","alpha","beta"),3)#
qs = rep(0:2,each=3)#
#
otuThr = 97#
#
source("init.R", local=TRUE)#
#
allStatTable <- NULL#
allStatTable$stat <- c("reads","OTUs","alpha","effective alpha")#
#
for (expId in 1:n) {	#
    communityMatrix <- init(expId, otuThr, "-by-plot")#
	source("TurnoverDist.R", local=TRUE)#
	# need to put on the top#
	source("SampleCounts.R", local=TRUE)#
#
	source("Diversities.R", local=TRUE)#
#
	print(paste(matrixNames[expId], " (", otuThr, "%) : OTUs = ", ncol(communityMatrix), ", total reads = ", sum(communityMatrix), "; min sample per plot = ", min(rowSums(communityMatrix)), "; max = ", max(rowSums(communityMatrix)), sep=""))#
	print(paste("alpha = ", diversity_table[2,1], "; effective alpha = ", diversity_table[2,2], sep=""))#
	print(diversity_table)#
	allStatTable$tmp <- c(sum(communityMatrix),ncol(communityMatrix),diversity_table[2,1],diversity_table[2,2])#
	names(allStatTable)[names(allStatTable) == 'tmp'] <- matrixNames[expId]#
}
allStatTable
outputStat <- paste(workingPath, "stats-by-plot-454-", otuThr, ".txt", sep = "")#
write.table(allStatTable, outputStat, sep="\t", quote=FALSE)
outputStat <- paste(workingPath, "stats-by-plot-454-", otuThr, ".txt", sep = "")#
write.table(allStatTable, outputStat, sep="\t", quote=FALSE, row.names=FALSE, check.names=F)
outputStat <- paste(workingPath, "stats-by-plot-454-", otuThr, ".txt", sep = "")#
write.table(allStatTable, outputStat, sep="\t", row.names=FALSE)
names(allStatTable)[names(allStatTable) == 'X16s'] <- as.character(16S)
names(allStatTable)[names(allStatTable) == 'X16s'] <- as.character("16S")
allStatTable
outputStat <- paste(workingPath, "stats-by-plot-454-", otuThr, ".txt", sep = "")#
write.table(allStatTable, outputStat, sep="\t", quote=FALSE, row.names=FALSE)
source('~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/allStatistics.r', chdir = TRUE)
source('~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/allGeneCorrolation.r', chdir = TRUE)
source('~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/allGeneCorrolation.r', chdir = TRUE)
experiments <-  c("16S", "18S", "trnL", "ITS", "COI", "COI-spun") # only for cm file name and folder name#
matrixNames <-  experiments#
#
matrixNamesNo454 <-  c("seedlings","trees","inverts","birds") # need expId correct for "birds","seedlings"
corDF <- data.frame(row.names=c(matrixNames, matrixNamesNo454)[-1])
corDF
rep(NA, 5)
nrow(corDF)
corDF$tmp <- rep(NA, nrow(corDF))
corDF
corDF$tmp[1]
corDF <- matrix("",nrow=(n+m-1),ncol=(n+m-1))
corDF
source('~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/allGeneCorrolation.r', chdir = TRUE)
source('~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/allGeneCorrolation.r', chdir = TRUE)
expId
source('~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/allGeneCorrolation.r', chdir = TRUE)
c(matrixNames, matrixNamesNo454)[-(n+m)]
source('~/svn/compevol/research/NZGenomicObservatory/Metabarcoding/R/allGeneCorrolation.r', chdir = TRUE)
